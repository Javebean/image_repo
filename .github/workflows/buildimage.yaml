name: Build and Push to Aliyun

on:
  workflow_dispatch:  # 允许手动触发
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: homesmart
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # 步骤1：克隆 Gitee 私有仓库
      - name: Clone Gitee Repository
        run: |
          rm -rf ${{ secrets.GITEE_REPO_LOCALSERVE }}
          git clone -b home-projects --single-branch https://"${{ secrets.GITEE_USERNAME_REPO }}":"${{ secrets.GITEE_PASS_LOGIN }}"@gitee.com/"${{ secrets.GITEE_USERNAME_REPO }}"/"${{ secrets.GITEE_REPO_LOCALSERVE }}".git
          ls -la ${{ secrets.GITEE_REPO_LOCALSERVE }}  # 验证克隆结果

      # 步骤2：登录阿里云镜像仓库
      - name: Login to Aliyun Container Registry
        run: |
          echo ${{ secrets.ALIYUN_REPO_PASS }} | docker login \
            -u ${{ secrets.ALIYUN_REPO_USER }} \
            --password-stdin \
            registry.cn-hangzhou.aliyuncs.com
            
      # 步骤3：构建并推送 Docker 镜像
      - name: Build and Push Docker Image
        working-directory: ./${{ secrets.GITEE_REPO_LOCALSERVE }}/home-projects/localserve  # 进入代码目录
        run: |
          # docker build -t ${{ secrets.ALIYUN_REPO_DOMAIN }}/homesmart/localserver:debug .
          docker build -t localserver:debug .
          
          echo "--------------"
          docker images
          echo "--------------"

          repository="localserver"
          tag="debug"
          image_id=$(docker images --format "{{.ID}}" --filter "reference=$repository:$tag")
          echo $image_id
          docker tag "$image_id" crpi-9qpzy3u9htsic0vd.cn-shanghai.personal.cr.aliyuncs.com/homesmart/localserver-rrr:debug

          echo "----22----------"
          docker images
          echo "----22----------"
          
          sleep 5
          docker push "${{ secrets.ALIYUN_REPO_DOMAIN }}/homesmart/localserver-rrr:debug"
      - name: Push Docker Image
        run: |
          #docker push crpi-9qpzy3u9htsic0vd.cn-shanghai.personal.cr.aliyuncs.com/homesmart/localserver:debug
          process_image() {
            local image_name=$1
            local platform=${2:-"amd64"}  # 设置默认平台为amd64
            
            echo "Processing image: ${image_name} with platform: ${platform}"
            
            docker pull --platform "${platform}" "${image_name}"
            image_id=$(docker images --format "{{.ID}}" --filter "reference=${image_name}")
            modify_name=$(echo "${image_name}" | sed 's/\//-/g')
            if [[ "$platform" == "arm64" ]]; then
              modify_name="${modify_name}-arm64"
            fi
            docker tag "$image_id" "${{ secrets.ALIYUN_REPO_DOMAIN }}/${{ env.NAMESPACE }}/${modify_name}"
            docker push "${{ secrets.ALIYUN_REPO_DOMAIN }}/${{ env.NAMESPACE }}/${modify_name}"
          }

          # 登录Docker registry
          #docker login --username="${{ secrets.ALIYUN_REPO_USER }}" "${{ secrets.ALIYUN_REPO_DOMAIN }}" --password="${{ secrets.ALIYUN_REPO_PASS }}"

          # derp
          #process_image "shadowofgost/derper:main"
          # process_image "shadowofgost/derper:ip"
      
      
      - name: Login to Docker Registry2
        run: |
          docker login --username=${{ secrets.ALIYUN_REPO_USER }} ${{ secrets.ALIYUN_REPO_DOMAIN }} --password=${{ secrets.ALIYUN_REPO_PASS }}
      
      - name: Pull multiple Docker images2
        run: |  
          process_image() {
            local image_name=$1
            local platform=${2:-"amd64"}  # 设置默认平台为amd64
            
            echo "Processing image: ${image_name} with platform: ${platform}"
            
            docker pull --platform "${platform}" "${image_name}"
            image_id=$(docker images --format "{{.ID}}" --filter "reference=${image_name}")
            modify_name=$(echo "${image_name}" | sed 's/\//-/g')
            if [[ "$platform" == "arm64" ]]; then
              modify_name="${modify_name}-arm64"
            fi
            docker tag "$image_id" "${{ secrets.ALIYUN_REPO_DOMAIN }}/${{ env.NAMESPACE }}/${modify_name}"
            docker push "${{ secrets.ALIYUN_REPO_DOMAIN }}/${{ env.NAMESPACE }}/${modify_name}"
          }

          # 登录Docker registry
          docker login --username="${{ secrets.ALIYUN_REPO_USER }}" "${{ secrets.ALIYUN_REPO_DOMAIN }}" --password="${{ secrets.ALIYUN_REPO_PASS }}"

          # derp
          process_image "shadowofgost/derper:main"
          # process_image "shadowofgost/derper:ip"

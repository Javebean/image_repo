name: Pull Docker Image and Release to Gitee

on:
  schedule:
    - cron: '0 0 * * 1'  # 每周一 00:00 UTC
  workflow_dispatch:  # 允许手动触发

jobs:
  pull-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pull multiple Docker images
        run: |
          docker pull linuxserver/nginx:latest
          docker pull shadowofgost/derper:main
          docker pull shadowofgost/derper:ip
          docker pull tailscale/tailscale:stable
          docker pull linuxserver/qbittorrent:latest
          docker pull filebrowser/filebrowser:v2-s6

      - name: Save Docker images to tar files
        run: |
          docker save linuxserver/nginx:latest -o nginx_latest.tar
          docker save shadowofgost/derper:main -o derper_main.tar
          docker save shadowofgost/derper:ip -o derper_ip.tar
          docker save tailscale/tailscale:stable -o tailscale_stable.tar
          docker save linuxserver/qbittorrent:latest -o qbittorrent_latest.tar
          docker save filebrowser/filebrowser:v2-s6 -o filebrowser_v2_s6.tar


      - name: Compress Docker images
        run: |
          gzip nginx_latest.tar
          gzip derper_main.tar
          gzip derper_ip.tar
          gzip tailscale_stable.tar
          gzip qbittorrent_latest.tar
          gzip filebrowser_v2_s6.tar
        
      - name: Get current date for tag
        id: get_date_tag
        run: |
          # 获取当前日期，格式为 YYYYMMDD
          current_date=$(date +'%Y%m%d')
          echo "Current date as tag: $current_date"
          echo "tag_name=$current_date" >> $GITHUB_ENV

      - name: Delete Release from Gitee
        run: |
          GITEE_TOKEN="${{ secrets.GITEE_ACCESS_TOKEN }}"  # Gitee Token 需要保存在 GitHub Secrets 中
          GITEE_OWNER="gemilk"  # 替换为你的 Gitee 用户名
          GITEE_REPO="image_repo"  # 替换为你的 Gitee 仓库名
          RELEASE_TAG="20250405_test2"  # 替换为你要删除的 Release 标签

          # 获取 Release ID
          RELEASE_ID=$(curl -s \
            -H "Authorization: token $GITEE_TOKEN" \
            "https://gitee.com/api/v5/repos/$GITEE_OWNER/$GITEE_REPO/releases/tags/$RELEASE_TAG" \
            | jq -r '.id')

          if [ "$RELEASE_ID" != "null" ]; then
            echo "Release found with ID: $RELEASE_ID"
            
            # 删除 Release
            curl -X DELETE \
              -H "Authorization: token $GITEE_TOKEN" \
              "https://gitee.com/api/v5/repos/$GITEE_OWNER/$GITEE_REPO/releases/$RELEASE_ID"
            echo "Release deleted successfully."
          else
            echo "Release not found."
          fi
      
      - name: Create release
        if: env.release_exists == 'false'
        id: create_release
        uses: nicennnnnnnlee/action-gitee-release@v1.0.5
        with:
          gitee_owner: gemilk
          gitee_repo: image_repo
          gitee_token: ${{ secrets.GITEE_ACCESS_TOKEN  }}
          gitee_tag_name: ${{ env.tag_name }}_test2
          gitee_release_name: ${{ env.tag_name }}
          gitee_release_body: 常用docker images
          gitee_target_commitish: master

            
      - name: Upload files to exist release
        uses: nicennnnnnnlee/action-gitee-release@v1.0.5
        with:
          gitee_owner: gemilk
          gitee_repo: image_repo
          gitee_token: ${{ secrets.GITEE_ACCESS_TOKEN }}
          gitee_release_id: ${{ steps.create_release.outputs.release-id }}
          gitee_upload_retry_times:  3
          gitee_files: |
            nginx_latest.tar.gz
            derper_main.tar.gz
            derper_ip.tar.gz
            tailscale_stable.tar.gz
            qbittorrent_latest.tar.gz
            filebrowser_v2_s6.tar.gz



